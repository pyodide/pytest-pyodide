[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pytest-pyodide"
author = "Pyodide developers"
description = "Pytest plugin for testing applications that use Pyodide"
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: OS Independent",
    "Framework :: Pytest"
]
dynamic = ["version"]
requires-python = ">=3.10"
dependencies = [
  "pexpect",
  "pytest",
  "pytest-asyncio",
  "hypothesis",
  "selenium",
  "playwright",
  "pyodide-tblib", # Forked to add https://github.com/ionelmc/python-tblib/pull/66
]

[project.optional-dependencies]
test = [
  "pytest-cov",
  "build",
  "requests",
]

# pytest will look up `pytest11` entrypoints to find plugins
# See: https://docs.pytest.org/en/7.1.x/how-to/writing_plugins.html#making-your-plugin-installable-by-others
[project.entry-points.pytest11]
pytest_pyodide = "pytest_pyodide.fixture"
pytest_pyodide_hook = "pytest_pyodide.hook"

[project.urls]
Homepage = "https://github.com/pyodide/pytest-pyodide"
Repository = "https://github.com/pyodide/pytest-pyodide"
Changelog = "https://github.com/pyodide/pytest-pyodide/blob/main/CHANGELOG.md"

[tool.hatch.version]
source = "vcs"

[tool.mypy]
python_version = "3.10"
show_error_codes = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

# Strict checks
warn_unused_configs = true
check_untyped_defs = true
disallow_subclassing_any = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
no_implicit_reexport = true
strict_equality = true
ignore_missing_imports = true
# this

[tool.ruff]
select = [
  "B0",     # bugbear (all B0* checks enabled by default)
  "B904",   # bugbear (Within an except clause, raise exceptions with raise ... from err)
  "B905",   # bugbear (zip() without an explicit strict= parameter set.)
  "C9",     # mccabe complexity
  "E",      # pycodestyles
  "W",      # pycodestyles
  "F",      # pyflakes
  "I",      # isort
  "PGH",    # pygrep-hooks
  "PLC",    # pylint conventions
  "PLE",    # pylint errors
  "UP",     # pyupgrade
]
ignore = ["E402", "E501", "E731", "E741"]
# line-length = 219  # E501: Recommended goal is 88 to match black
target-version = "py310"

[tool.ruff.isort]
known-first-party = [
  "pyodide",
  "pyodide_js",
  "micropip",
  "pyodide_build",
  "_pyodide",
  "js",
]
known-third-party = [
  "build",
]

[tool.ruff.mccabe]
max-complexity = 31  # C901: Recommended goal is 10

[tool.pytest]
asyncio_mode = "strict"
addopts = "--tb=short --doctest-modules --cov=pytest_pyodide --cov-report xml"
