name: main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: main-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYODIDE_VERSION: 0.21.0a3

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2
      - uses: pre-commit/action@v2.0.3

  download-pyodide:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Pyodide
        uses: actions/cache@v2
        id: cache-pyodide
        with:
          path: dist
          key: ${{ runner.os }}-pyodide-$PYODIDE_VERSION
          restore-keys: |
            ${{ runner.os }}-pyodide-

      - name: Download Pyodide
        shell: bash -l {0}
        if: steps.cache-pyodide.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/pyodide/pyodide/releases/download/$PYODIDE_VERSION/pyodide-build-$PYODIDE_VERSION.tar.bz2
          tar xjf pyodide-build-$PYODIDE_VERSION.tar.bz2
          mv pyodide dist/

  test:
    runs-on: ubuntu-latest
    env:
      DISPLAY: :99
    strategy:
      matrix:
        test-config: [
          {runner: selenium, browser: firefox, version: 102},
          {runner: selenium, browser: chrome, version: 102},
          {runner: selenium, browser: node, version: 14},
          {runner: selenium, browser: node, version: 16},
          {runner: selenium, browser: node, version: 18},
          {runner: playwright, browser: firefox, version: _},
          {runner: plawyright, browser: chrome, version: _},
        ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2

      - uses: actions/setup-node@v3
        if: ${{ matrix.test-config.browser == 'node' }}
        with:
          node-version: ${{ matrix.test-config.version }}

      - name: Install requirements
        shell: bash -l {0}
        run: |
          pip install -e .
          pip install pytest-cov
          # Currently we only install the package for dependencies.
          # We then uninstall it otherwise tests fails due to pytest hook being
          # registered twice.
          pip uninstall -y pytest-pyodide

      - name: Get Pyodide from cache
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ runner.os }}-pyodide-$PYODIDE_VERSION
          restore-keys: |
            ${{ runner.os }}-pyodide-

      - name: Run tests
        shell: bash -l {0}
        run: |
          # TODO: fix node tests
          pytest --cov=pytest_pyodide -v --dist-dir=./dist/ -k "not node"
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
