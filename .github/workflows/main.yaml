name: main

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      build-artifact-path:
        required: true
        type: string
      pyodide-version:
        required: false
        type: string
        default: "0.21.0"
      runner:
        required: false
        type: string
        default: "selenium"
      runner-version:
        required: false
        type: string
        default: ""
      browser:
        required: false
        type: string
        default: "chrome"
      browser-version:
        required: false
        type: string
        default: "latest"
      os:
        required: false
        type: string
        default: "ubuntu-latest"
      driver-version:
        required: false
        type: string
        default: "latest"
permissions:
  contents: read

jobs:
  test:
    name: test ${{ inputs.browser }} ( ${{ inputs.runner }},${{ inputs.os }},pyodide:${{ inputs.pyodide-version}})
    runs-on: ${{ inputs.os }}
    env:
      DISPLAY: :99
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.2

      - uses: pyodide/pyodide-actions/download-pyodide@v1
        with:
          version: ${{ inputs.pyodide-version }}
          to: pyodide-dist

      - uses: pyodide/pyodide-actions/install-browser@v1
        with:
          runner: ${{ inputs.runner }}
          browser: ${{ inputs.browser }}
          browser-version: ${{ inputs.browser-version }}
          driver-version: ${{ inputs.driver-version }}
          playwright-version: ${{ inputs.runner-version }}

      - name: Download build artifacts from calling package
        if: ${{ inputs.build-artifact-name != 'none' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.build-artifact-name }}
          path: ${{ inputs.build-artifact-path }}

      - name: Install pytest-pyodide
        shell: bash -l {0}
        run: |
          python3.10 -m pip install pytest-cov
          if [ -d "pytest_pyodide" ]; then
            # Currently we only install the package for dependencies.
            # We then uninstall it otherwise tests fails due to pytest hook being
            # registered twice.
              python3.10 -m pip install -e .
              python3.10 -m pip uninstall -y pytest-pyodide
          else
              python3.10 -m pip install pytest-pyodide
          fi
          which npm && npm install -g npm && npm update
          which npm && npm install node-fetch@2
      - name: Run tests
        shell: bash -l {0}
        run: |
          pytest -v \
            --cov=pytest_pyodide \
            --dist-dir=./pyodide-dist/ \
            --runner=${{ inputs.runner }} \
            --rt ${{ inputs.browser }}
      - name: Check for coverage file
        id: check_coverage
        uses: andstor/file-existence-action@v2
        with:
          files: "coverage.xml"
      - uses: codecov/codecov-action@v3
        if: ${{ steps.check_coverage.outputs.files_exists }}
        with:
          fail_ci_if_error: false
